extends admin

block admin_css
    link(rel='stylesheet', href='/css/codemirror.css')

block admin_script
    script(tpye='text/javascript', src='/js/codemirror.js')
    script(type='text/javascript', src='/js/marked.js')
    script(tpye='text/javascript', src='/js/jquery.fs.selecter.min.js')
    script(type='text/javascript', src='/js/webuploader.min.js')
    script(type='text/javascript').
        (function () {
            var editor = CodeMirror.fromTextArea($('#new-post-area')[0], {
                mode: null,
                indentUnit: 4,
                lineWrapping: true,
                extraKeys: {
                    'F11': fullScreen,
                    'Ctrl-P': mdPreview,
                    'Alt-C': closePreview,
                    'Ctrl-I': insertImage
                }
            });
            var draftId = '';
            var previousTitle = '';
            var previousPost = '';
            var previousTags = '';
            var previousCategory = '';

            var updateDraft = function () {
                var tags = [];
                var title = $('input[name="title"]').val();
                var category = $('option:selected').val();
                var post = editor.getValue();
                $('input[name="tags"]').each(function (index, item) {
                    tags.push($(item).val()); 
                });
                if (previousCategory === category &&
                    previousTags.toString() === tags.toString() &&
                    previousPost === post &&
                    previousTitle === title) {
                    return ;
                } else {
                    previousTitle = title;
                    previousPost = post;
                    previousTags = tags;
                    previousCategory = category;
                    $.ajax({
                        url: '#{adminPath}/post/draft/'+draftId,
                        type: 'POST',
                        data: {
                            title: title,
                            categories: category,
                            post: post,
                            tags: tags
                        },
                        success: function (data) {
                            var time = new Date();
                            $('.db-draft-info').html('Draft saved in'+time.toTimeString());
                            setTimeout(function () {
                                $('.db-draft-info').html('');
                            }, 5000)
                        }
                    });
                }
            };
            var createDraft = function () {
                var tags = [];
                $('input[name="tags"]').each(function (index, item) {
                    tags.push($(item).val()); 
                });
                $.ajax({
                    url: '#{adminPath}/post/draft/new',
                    type: 'POST',
                    data: {
                        title: $('input[name="title"]').val(),
                        categories: $('option:selected').val(),
                        post: editor.getValue(),
                        tags: tags
                    },
                    success: function (data) {
                        if (data.code === 1 && data.id) {
                            draftId = data.id;
                            $('#new-post').append($('<input type="text" value="'+data.id+'" name="draftid" style="display:none"/>'))
                            var update = setInterval(updateDraft, 10000);
                        } else {
                            console.error('create draft error');
                        }
                    }
                })
                editor.off('change', createDraft);
            };
            editor.on('change', createDraft)
            $('.db-save-draft').on('click', function () {
                updateDraft();
            });
            $('.db-new-title').focus();
            $('select').selecter();
            $('.db-editor-fs').on('click', function () {
                fullScreen();
            });
            $('.db-editor-preview').on('click', function () {
                mdPreview();
            });
            $('.db-preview-close').on('click', function () {
                closePreview();
            });

            $('.db-tag').on('keyup', function (event) {
                    event = event ? event : window.event;
                    if (event.which === 188){
                        $(this).val($(this).val().slice(0,$(this).val().length-1));
                        addTag();
                        $(this).val("");
                    }
            }).on('blur', function (event) {
                    event = event ? event : window.event;
                    if ($(this).val() !== "") {
                        addTag();
                        $(this).val("");
                    }
            }).on('keydown', function (event) {
                event = event ? event : window.event;
                if (event.which === 8 ) {
                    if ($(this).val() === "") {
                        $(".db-single-tag:last").remove();
                    }
                }
            });

            $('.db-tags').on('click','.db-single-tag', function () {
                $(this).remove();
            }).on('click', function () {
                $('.db-tag').focus();
            });

            function addTag () {
                var tag = $("<a class='db-single-tag' href='javascript:;'></a>");
                var tagInput = $("<input name='tags' class='db-tag-input' />");
                tag.html($(".db-tag").val());
                tagInput.val(tag.text());
                $(".db-tag").before(tag);
                tag.append(tagInput);
                tag.append($("<i class='glyphicon glyphicon-remove'></i>"));
            }

            function mdPreview () {
                $('.db-preview-main').html(marked(editor.getValue()));
                $('.db-preview').fadeIn();
                editor.focus();
            }

            function fullScreen () {
                $('.db-new-editor').toggleClass('editor-fullscreen');
            }

            function closePreview () {
                $('.db-preview').fadeOut()
            }

            function insertImage () {

            }
            
            //- var uploader = new WebUploader.Uploader({
            //-     dnd: '#dndArea',
            //-     paste: document.body,
            //-     pick: {
            //-         id: '#picker',
            //-         innerHTML: '选择图片',

            //-     },
            //-     accept: {
            //-         title: 'Images',
            //-         extensions: 'gif,jpg,jpeg,bmp,png',
            //-         mimeType: 'image/*'
            //-     },
            //-     thumb: {
            //-         width: 120,
            //-         height: 120,
            //-         crop: true,
            //-     },
            //-     compress: false,
            //-     chunked: true,
            //-     server: '#{adminPath}/post/image',
            //- })

        })();

block new_post
    section.db-editor-wrapper
        .db-new-main
            form#new-post(method='post', action='#{adminPath}/post/new')
                .db-new-header
                    .col-xs-12.col-md-12.db-title-wrapper
                        input.db-new-title.form-control#post-title(type='text', name='title', placeholder='Post Title')
                        .db-cate-selecter(tabindex="0")
                            select(name='categories', tabindex='-1')
                                - if (categories)
                                    - each item in categories
                                        option(value='#{item.name}') #{item.name}
                                        
                .db-new-editor
                    .db-editor-helper
                        span Markdown
                        span.db-draft-info
                        a.db-editor-fs(href='javascript:;')
                            i.glyphicon.glyphicon-fullscreen
                        a.db-editor-preview(href='javascript:;')
                            i.glyphicon.glyphicon-eye-open
                        a.db-editor-insertimg(href='#', data-toggle='modal', data-target='#insert')
                            i.glyphicon.glyphicon-picture
                        a.db-editor-help(href='javascript:;')
                            i.glyphicon.glyphicon-question-sign
                        a.db-save-draft(href='javascript:;') Save draft
                    textarea.new-post-area#new-post-area(name='post')
                .db-tags
                    input.form-control.db-tag(type='text', placeholder='文章标签。多个标签请用“，”号隔开。')
                    button.btn.btn-primary.db-publish(form='new-post') 发表
                .db-preview
                    .db-preview-wrapper
                        .db-preview-header
                            a.db-preview-close(href='javascript:;'): i.glyphicon.glyphicon-remove-sign
                            p Markdown Preview
                        .db-preview-main

                
                .modal.fade#insert(tabindex='-1', role='dialog', aria-labelledby='myModalLabel', aria-hidden='true')
                    .modal-dialog
                        .modal-content
                            .modal-header
                                button.close(type='button', data-dismiss='modal')
                                    span(aria-hidden='true') &times;
                                    span.sr-only Close
                                h4.modal-title 插入图片
                            .modal-body
                                .imgupload#uploader
                                    .img-picker
                                        a#picker 选择图片
                                            

                            .modal-footer
                                button.btn.btn-default(type='button', data-dismiss='modal') Close
                                button.btn.btn-primary(type='button') Save changes
